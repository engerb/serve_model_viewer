{"version":3,"sources":["components/Store.js","components/Serve.jsx","components/Customizer.jsx","components/Scene.jsx","App.jsx","index.js"],"names":["binDecals","lidDecals","generalDecals","armBandDecals","loadTexture","url","TextureLoader","load","texture","flipY","encoding","sRGBEncoding","invalidate","undefined","error","console","useStore","create","set","get","current","setCurrent","background","setBackground","setItem","item","items","wheels","name","showHubs","showShadow","wheelAngle","wheelSpeed","serveAngle","aluminum","color","lid","open","selectedIndex","textures","bin","front_decal","rear_bottom_decal","rear_top_decal","side_arm_decal","engraveDepth","props","group","useRef","useGLTF","nodes","materials","state","useState","hovered","setHovered","useEffect","cursor","document","body","style","btoa","rotation-y","ref","dispose","onPointerOver","e","stopPropagation","object","onPointerOut","intersections","length","onPointerMissed","onPointerDown","position","geometry","cap_fl","material","material-transparent","material-aoMapIntensity","material-roughnessMap","tex_cloud_ref","map","hub_fl","material-color","tire_fl","material-normalScale","cap_rl","hub_rl","tire_rl","boggy_arm_l","cap_fr","hub_fr","tire_fr","cap_rr","hub_rr","tire_rr","boggy_arm_r","rotation-x","lid_top","mat_lid_vinyl","material-roughness","material-map","material-opacity","onUpdate","self","needsUpdate","mat_lid_base","strip","lid_inside","lid_liner","mat_bin_vinyl","mat_bin_base","mat_front_decal","material-alphaTest","mat_rear_bottom_decal","mat_rear_top_decal","mat_side_arm_aluminum","material-flatShading","material-bumpScale","material-bumpMap","material-alphaMap","screen","mat_screen","tail_lights","mat_tail_lights","eye_lense","black_glass","mat_lense","black_plastic","black_plastic_base","blocker","mat_light_blocker","eye_plate","mat_metal_black_rough","liner","mat_floor","tex_floor_ref","floor","preload","PrettoSlider","withStyles","root","height","thumb","width","backgroundColor","border","marginTop","marginLeft","boxShadow","active","valueLabel","left","track","borderRadius","rail","Slider","PurpleSwitch","switchBase","checked","Switch","currentItem","imageInput","className","onChange","index","backgroundImage","onClick","preventDefault","click","FormGroup","row","Object","entries","key","value","includes","FormControlLabel","control","parseInt","Math","radToDeg","valueLabelDisplay","val","degToRad","step","min","max","label","target","id","type","accept","display","file","files","URL","createObjectURL","push","canvas","getElementsByTagName","toDataURL","link","createElement","setAttribute","warn","shadows","concurrent","gl","preserveDrawingBuffer","frameloop","dpr","fov","near","far","fallback","Serve","Environment","preset","OrbitControls","minDistance","maxDistance","enableDamping","dampingFactor","minPolarAngle","maxPolarAngle","skyColor","groundColor","intensity","shadow-camera-left","shadow-camera-bottom","shadow-camera-right","shadow-camera-top","shadow-mapSize-height","shadow-mapSize-width","castShadow","Scene","ReactDOM","render","App","getElementById"],"mappings":"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","file":"static/js/main.190f8880.chunk.js","sourcesContent":["import create from 'zustand';\nimport { sRGBEncoding, TextureLoader } from 'three'\nimport { invalidate } from '@react-three/fiber'\n\nconst binDecals = ['bin_1.png', 'bin_2.png', 'bin_3.png', 'bin_4.png', 'bin_5.png']\nconst lidDecals = ['lid_1.png', 'lid_2.png', 'lid_3.png', 'lid_4.png', 'lid_5.png']\nconst generalDecals = ['decal_cat.png', 'decal_mask.png', 'decal_mustache.png', 'decal_postmates.png', 'decal_smile.png']\nconst armBandDecals = ['engrave_maze.png', 'engrave_word.png']\n\nconst loadTexture = (url) => {\n    if (!url) {\n        invalidate()\n        return null\n    }\n\n    return new TextureLoader().load(url, (texture) => {\n        texture.flipY = false\n        texture.encoding = sRGBEncoding\n        invalidate()\n        return texture\n    },\n    undefined,\n    (error) => {\n        console.error('An error happened: ', error)\n        invalidate()\n        return null\n    })\n}\n\nconst useStore = create((set, get) => ({\n    current: null,\n    setCurrent: (current) => {set({current: current})},\n    background: 'black',\n    setBackground: (background) => {set({background: background})},\n    binDecals: binDecals,\n    lidDecals: lidDecals,\n    generalDecals: generalDecals,\n    armBandDecals: armBandDecals,\n    setItem: (item) => {set({})}, // just used to force re-render\n    loadTexture: (url) => {return loadTexture(url)},\n    items: {\n        wheels: {\n            name: 'Wheels',\n            showHubs: true,\n            showShadow: true,\n            wheelAngle: 0,\n            wheelSpeed: 0,\n            serveAngle: 0,\n        },\n        aluminum: {\n            name: 'Aluminum',\n            color: '#ded8dd',\n        },\n        lid: {\n            name: 'Lid',\n            color: '#ffffff',\n            open: false,\n            selectedIndex: 0,\n            texture: loadTexture(lidDecals[0]),\n            textures: lidDecals\n        },\n        bin: {\n            name: 'Bin',\n            color: '#ffffff',\n            texture: '/wraps/bin_1.png',\n            selectedIndex: 0,\n            texture: loadTexture(binDecals[0]),\n            textures: binDecals\n        },\n        front_decal: {\n            name: 'Front decal',\n            texture: null,\n            selectedIndex: null,\n            textures: generalDecals\n        },\n        rear_bottom_decal: {\n            name: 'Rear bottom decal',\n            texture: null,\n            selectedIndex: null,\n            textures: generalDecals\n        },\n        rear_top_decal: {\n            name: 'Rear top decal',\n            texture: null,\n            selectedIndex: null,\n            textures: generalDecals\n        },\n        side_arm_decal: {\n            name: 'Side arm',\n            engraveDepth: -0.2,\n            texture: null,\n            selectedIndex: null,\n            textures: armBandDecals\n        },\n    },\n}));\n\nexport default useStore","import React, { useRef, useState, useEffect } from 'react'\nimport { useGLTF } from '@react-three/drei'\nimport useStore from './Store' \n\n\nexport default (props) => {\n  const group = useRef()\n  const { nodes, materials } = useGLTF('serve.glb')\n  const [setCurrent, items] = useStore(state => [state.setCurrent, state.items])\n  \n  const [hovered, setHovered] = useState(null)\n  useEffect(() => {\n    const cursor = `<svg width=\"64\" height=\"64\" viewBox=\"0 0 64 64\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n      <rect x=\"5\" y=\"30\" width=\"59\" height=\"19\" rx=\"2\" fill=\"black\"/>  \n      <text fill=\"white\" style=\"white-space:pre\" dominant-baseline=\"middle\" text-anchor=\"middle\" font-weight=\"bold\" font-family=\"Montserrat, sans-serif\" font-size=\"11\" letter-spacing=\"-.01em\"><tspan x=\"53%\" y=\"41\">${hovered && items[hovered].name}</tspan></text>\n      <path opacity=\"0.2\" d=\"M26.8258 21.451L16.4335 27.451C15.9139 27.751 15.3675 27.6046 15.0675 27.085C14.3175 25.786 13.2613 25.3565 11.6086 24.6941C10.739 24.3879 9.6828 23.9585 8.52658 23.3558C5.38114 21.7078 2.10889 19.4401 1.11248 18.5142C0.116071 17.5884 -0.0741217 16.659 0.0222885 16.026C0.0686986 15.3063 0.611518 14.6465 1.39094 14.1965C2.43017 13.5965 3.9694 13.8626 5.57203 14.4384L0.422031 5.51834C-0.427969 4.04609 0.0478632 2.27026 1.52011 1.42026C2.99235 0.570261 4.76818 1.04609 5.61818 2.51834L7.71818 6.15564C7.92799 5.91904 8.1378 5.68244 8.48421 5.48244C9.43684 4.93244 10.5163 5.00205 11.3493 5.44487C11.5457 4.98507 11.9287 4.64847 12.3617 4.39847C13.5741 3.69847 14.9768 3.92789 15.9732 4.85372C16.183 4.61712 16.4794 4.33052 16.8258 4.13052C18.2981 3.28052 20.0739 3.75635 20.9239 5.22859L22.4239 7.82667C23.7239 10.0783 24.3409 12.147 24.9079 14.129C25.4748 16.1111 25.9918 18.0065 27.1918 20.085C27.4918 20.6046 27.3454 21.151 26.8258 21.451Z\" fill=\"black\"/>\n      <path opacity=\"0.3\" d=\"M22 10.5C24.1467 14.5355 23.5 16 26 21.5L16 27.5L13.5 25C12.3333 24.5 7 22.5 7 22.5L1.40808 18.5058C0.597393 17.9267 0.328147 16.8437 0.773687 15.9526C1.19806 15.1039 2.13182 14.7381 2.97895 15.1658C4.1363 15.75 5.5 16.5 5.5 16.5C5.5 16.5 8.33333 18.3333 9 19L0.883403 5.47234C0.38886 4.6481 0.628869 3.58075 1.42865 3.04757C2.28412 2.47725 3.44266 2.73777 3.97164 3.6194L9 12L7.81796 9.3404C7.36799 8.32797 7.8328 7.14309 8.85114 6.70665C9.7878 6.30523 10.8763 6.67735 11.3712 7.56816L13 10.5L11.7584 7.70642C11.3519 6.79182 11.822 5.72599 12.7715 5.40949C13.4968 5.16772 14.2942 5.44131 14.7183 6.07744L17 9.5L16.2118 7.39812C15.843 6.41477 16.4637 5.33939 17.4996 5.16673C18.1142 5.0643 18.7342 5.31333 19.0899 5.8249C19.8644 6.93877 21.1034 8.81442 22 10.5Z\" fill=\"black\"/>\n      <path d=\"M22.5 9C24.6467 13.0355 24 14.5 26.5 20L16.5 26L14 23.5C12.8333 23 7.5 21 7.5 21L1.90808 17.0058C1.09739 16.4267 0.828147 15.3437 1.27369 14.4526C1.69806 13.6039 2.63182 13.2381 3.47895 13.6658C4.6363 14.25 6 15 6 15C6 15 8.83333 16.8333 9.5 17.5L1.3834 3.97234C0.88886 3.1481 1.12887 2.08075 1.92865 1.54757C2.78412 0.977251 3.94266 1.23777 4.47164 2.1194L9.5 10.5L8.31796 7.8404C7.86799 6.82797 8.3328 5.64309 9.35114 5.20665C10.2878 4.80523 11.3763 5.17735 11.8712 6.06816L13.5 9L12.2584 6.20642C11.8519 5.29182 12.322 4.22599 13.2715 3.90949C13.9968 3.66772 14.7942 3.94131 15.2183 4.57744L17.5 8L16.7118 5.89812C16.343 4.91477 16.9637 3.83939 17.9996 3.66673C18.6142 3.5643 19.2342 3.81333 19.5899 4.3249C20.3644 5.43877 21.6034 7.31442 22.5 9Z\" fill=\"white\" stroke=\"black\" stroke-linejoin=\"round\"/>\n    </svg>`\n    const auto = `<svg width=\"32\" height=\"32\" xmlns=\"http://www.w3.org/2000/svg\">\n      <path opacity=\"0.3\" d=\"M3.5 25.5L0.5 2L19.5 16.5L10 18.5L3.5 25.5Z\" fill=\"black\"/>\n      <path d=\"M10.397 17.0107L10.2416 17.0434L10.1336 17.1598L4.36067 23.3768L1.64743 2.12306L18.8293 15.2355L10.397 17.0107Z\" fill=\"black\" stroke=\"white\"/>\n    </svg>`\n    document.body.style.cursor = `url('data:image/svg+xml;base64,${btoa(hovered ? cursor : auto)}'), auto`\n  }, [hovered])\n  \n  return (\n    <group rotation-y={items.wheels.serveAngle} ref={group} {...props} dispose={null}\n      onPointerOver={(e) => (e.stopPropagation(), e.object.name ? setHovered(e.object.name) : setHovered(null))}\n      onPointerOut={(e) => e.intersections.length === 0 && setHovered(null)}\n      onPointerMissed={() => (setCurrent(null))}\n      onPointerDown={(e) => (e.stopPropagation(), e.object.name ? (setCurrent(e.object.name)) : setCurrent(null))}>\n      <group position={[0, 0.26, 0]}>\n        <group position={[0.16, 0, 0]}>\n          <group rotation-y={items.wheels.wheelAngle} position={[0.02, -0.11, 0.23]}>\n            {items.wheels.showHubs && <mesh name={'wheels'} geometry={nodes.cap_fl.geometry} material={nodes.cap_fl.material} material-transparent={true} material-aoMapIntensity={1.5} material-roughnessMap={materials.tex_cloud_ref.map} />}\n            <mesh name={'wheels'} geometry={nodes.hub_fl.geometry} material-color={0x1D1D1D} material-roughnessMap={materials.tex_cloud_ref.map} material={nodes.hub_fl.material} />\n            <mesh name={'wheels'} geometry={nodes.tire_fl.geometry} material={nodes.tire_fl.material} material-color={0x333333} material-aoMapIntensity={0.5} material-normalScale={[-2, -2]} material-roughnessMap={materials.tex_cloud_ref.map} />\n          </group>\n          <group position={[0.02, -0.11, -0.23]}>\n            {items.wheels.showHubs && <mesh name={'wheels'} geometry={nodes.cap_rl.geometry} material={nodes.cap_rl.material} />}\n            <mesh name={'wheels'} geometry={nodes.hub_rl.geometry} material={nodes.hub_rl.material} />\n            <mesh name={'wheels'} geometry={nodes.tire_rl.geometry} material={nodes.tire_rl.material} />\n          </group>\n          <mesh geometry={nodes.boggy_arm_l.geometry} material-color={0x444444} material={nodes.boggy_arm_l.material} position={[-0.16, -0.26, 0]} />\n        </group>\n        <group position={[-0.16, 0, 0]}>\n          <group rotation-y={items.wheels.wheelAngle} position={[-0.02, -0.11, 0.23]}>\n            {items.wheels.showHubs && <mesh name={'wheels'} geometry={nodes.cap_fr.geometry} material={nodes.cap_fr.material} />}\n            <mesh name={'wheels'} geometry={nodes.hub_fr.geometry} material={nodes.hub_fr.material} />\n            <mesh name={'wheels'} geometry={nodes.tire_fr.geometry} material={nodes.tire_fr.material} />\n          </group>\n          <group position={[-0.02, -0.11, -0.23]}>\n            {items.wheels.showHubs && <mesh name={'wheels'} geometry={nodes.cap_rr.geometry} material={nodes.cap_rr.material} />}\n            <mesh name={'wheels'} geometry={nodes.hub_rr.geometry} material={nodes.hub_rr.material} />\n            <mesh name={'wheels'} geometry={nodes.tire_rr.geometry} material={nodes.tire_rr.material} />\n          </group>\n          <mesh geometry={nodes.boggy_arm_r.geometry} material={nodes.boggy_arm_r.material} position={[0.16, -0.26, 0]} />\n        </group>\n        <group rotation-x={items.lid.open ? -0.9 : 0} position={[0, 0.55, -0.33]}>\n          {/* Lid */}\n          <mesh name={'lid'} geometry={nodes.lid_top.geometry} material={materials.mat_lid_vinyl} position={[0, -0.81, 0.33]} material-roughness={0.5} material-roughnessMap={materials.tex_cloud_ref.map} material-transparent={true} material-map={items.lid.texture} material-opacity={items.lid.texture ? 1 : 0} onUpdate={self => self.material.needsUpdate = true} />\n          <mesh geometry={nodes.lid_top.geometry} material={materials.mat_lid_base} position={[0, -0.81, 0.33]} material-roughnessMap={materials.tex_cloud_ref.map} material-color={items.lid.color} />\n\n          {/* Strip */}\n          <mesh name={'lid'} geometry={nodes.strip.geometry} material-color={0xACACAC} material-roughnessMap={materials.tex_cloud_ref.map} material={nodes.strip.material} position={[0, -0.81, 0.33]} />\n\n          <mesh name={'lid'} geometry={nodes.lid_inside.geometry} material={nodes.lid_inside.material} material-color={0xEEEEEE} material-roughnessMap={materials.tex_cloud_ref.map} position={[0, -0.81, 0.33]} />\n          <mesh name={'lid'} geometry={nodes.lid_liner.geometry} material={nodes.lid_liner.material} material-color={0x111111} material-roughnessMap={materials.tex_cloud_ref.map} position={[0, -0.81, 0.33]} />\n        </group>\n\n        {/* Bin */}\n        <mesh name={'bin'} geometry={nodes.bin.geometry} material={materials.mat_bin_vinyl} material-roughness={0.5} material-roughnessMap={materials.tex_cloud_ref.map} material-transparent={true} position={[0, -0.26, 0]} material-map={items.bin.texture} material-opacity={items.bin.texture ? 1 : 0} onUpdate={self => self.material.needsUpdate = true} />\n        <mesh geometry={nodes.bin.geometry} material={materials.mat_bin_base} material-roughnessMap={materials.tex_cloud_ref.map} position={[0, -0.26, 0]} material-color={items.bin.color} />\n\n        {/* Decals */}\n        <mesh name={'front_decal'} material={materials.mat_front_decal} material-color={0xFFFFFF} material-alphaTest={0.8} material-opacity={items.front_decal.texture ? 1 : 0} material-map={items.front_decal.texture} material-roughnessMap={materials.tex_cloud_ref.map} geometry={nodes.front_decal.geometry} position={[0, -0.26, 0]} onUpdate={self => self.material.needsUpdate = true} />\n        <mesh name={'rear_bottom_decal'} material={materials.mat_rear_bottom_decal} material-color={0xFFFFFF} material-alphaTest={0.8} material-opacity={items.rear_bottom_decal.texture ? 1 : 0} material-map={items.rear_bottom_decal.texture} material-roughnessMap={materials.tex_cloud_ref.map} geometry={nodes.rear_bottom_decal.geometry} position={[0, -0.26, 0]} onUpdate={self => self.material.needsUpdate = true} />\n        <mesh name={'rear_top_decal'} material={materials.mat_rear_top_decal} material-color={0xFFFFFF} material-alphaTest={0.8} material-opacity={items.rear_top_decal.texture ? 1 : 0} material-map={items.rear_top_decal.texture} material-roughnessMap={materials.tex_cloud_ref.map} geometry={nodes.rear_top_decal.geometry} position={[0, -0.26, 0]} onUpdate={self => self.material.needsUpdate = true} />\n        <mesh name={'side_arm_decal'} material={materials.mat_side_arm_aluminum} material-color={items.aluminum.color} material-alphaTest={0.1} material-opacity={items.side_arm_decal.texture ? 1 : 0} material-flatShading={false} material-bumpScale={items.side_arm_decal.engraveDepth} material-bumpMap={items.side_arm_decal.texture} material-alphaMap={items.side_arm_decal.texture} material-transparent={true} material-roughnessMap={materials.tex_cloud_ref.map} geometry={nodes.side_arm_decal.geometry} position={[0, -0.26, 0]} onUpdate={self => self.material.needsUpdate = true} />\n\n        {/* Screen */}\n        <mesh geometry={nodes.screen.geometry} material={materials.mat_screen} material-roughnessMap={materials.tex_cloud_ref.map} material-color={0x0A0716} position={[0, -0.26, 0]} />\n\n        {/* Tail lights */}\n        <mesh geometry={nodes.tail_lights.geometry} material={materials.mat_tail_lights} position={[0, -0.26, 0]} />\n\n        {/* Eyes */}\n        <mesh geometry={nodes.eye_lense.geometry} material={nodes.eye_lense.material} position={[0, -0.26, 0]} />\n\n        <mesh name={'aluminum'} geometry={nodes.aluminum.geometry} material={nodes.aluminum.material} material-color={items.aluminum.color} position={[0, -0.26, 0]} />\n        <mesh geometry={nodes.black_glass.geometry} material={materials.mat_lense} material-color={0x0A0716} material-roughnessMap={materials.tex_cloud_ref.map}  position={[0, -0.26, 0]} />\n        <mesh geometry={nodes.black_plastic.geometry} material={nodes.black_plastic.material} material-roughnessMap={materials.tex_cloud_ref.map}  position={[0, -0.26, 0]} />\n        <mesh geometry={nodes.black_plastic_base.geometry} material={nodes.black_plastic_base.material} material-roughnessMap={materials.tex_cloud_ref.map} position={[0, -0.26, 0]} />\n        <mesh geometry={nodes.blocker.geometry} material={materials.mat_light_blocker} material-color={0x111111} position={[0, -0.26, 0]} />\n        <mesh geometry={nodes.eye_plate.geometry} material={materials.mat_metal_black_rough} material-color={0x444444} material-roughnessMap={materials.tex_cloud_ref.map} position={[0, -0.26, 0]} />\n        <mesh geometry={nodes.liner.geometry} material={nodes.liner.material} material-roughnessMap={materials.tex_cloud_ref.map} position={[0, -0.26, 0]} />\n      </group>\n\n      {/* Floor */}\n      {items.wheels.showShadow && <mesh material={materials.mat_floor} material-transparent={true} material-color={0x000000} material-alphaMap={materials.tex_floor_ref.map} geometry={nodes.floor.geometry} />}\n    </group>\n  )\n}\n\nuseGLTF.preload('serve.glb')\n","import React, { useRef } from 'react'\nimport { Math } from 'three'\nimport { HexColorPicker } from 'react-colorful'\nimport FormGroup from '@material-ui/core/FormGroup'\nimport FormControlLabel from '@material-ui/core/FormControlLabel'\nimport Switch from '@material-ui/core/Switch'\nimport { withStyles } from '@material-ui/core/styles'\nimport Slider from '@material-ui/core/Slider';\nimport useStore from './Store'\n\nimport './Customizer.scss'\n\nconst PrettoSlider = withStyles({\n    root: {\n        color: '#52af77',\n        height: 8,\n    },\n    thumb: {\n    height: 24,\n    width: 24,\n    backgroundColor: '#fff',\n    border: '2px solid currentColor',\n    marginTop: -8,\n    marginLeft: -12,\n        '&:focus, &:hover, &$active': {\n            boxShadow: 'inherit',\n        },\n    },\n    active: {},\n    valueLabel: {\n        left: 'calc(-50% + 4px)',\n    },\n    track: {\n        height: 8,\n        borderRadius: 4,\n    },\n    rail: {\n        height: 8,\n        borderRadius: 4,\n    },\n})(Slider)\n\nconst PurpleSwitch = withStyles({\n    switchBase: {\n        color: 'fff',\n        '&$checked': {\n            color: '#52af77',\n        },\n        '&$checked + $track': {\n            backgroundColor: '#52af77',\n        },\n    },\n    checked: {},\n    track: {\n        backgroundColor: 'grey'\n    },\n})(Switch)\n\nexport default (props) => {\n    const [current, setCurrent, items, background, setBackground, setItem, loadTexture] = useStore(state => [state.current, state.setCurrent, state.items, state.background, state.setBackground, state.setItem, state.loadTexture])\n    const currentItem = current ? items[current] : null\n    const imageInput = useRef()\n\n    return (\n        <div className={`Customizer`}>\n            {currentItem &&\n                <div className={`Actions ${background}`}> \n                    <div className={`ItemActions ${background}`}> \n                        {currentItem.color &&\n                            <HexColorPicker className='picker' color={currentItem.color} onChange={(color) => (currentItem.color = color, setItem(currentItem))} />\n                        }\n                        <h1>{currentItem.name}</h1>\n                    </div>\n                    <div className={`OtherActions ${background}`}>\n                        {'textures' in currentItem &&\n                            <div className={'Textures'}>\n                                {currentItem.textures.map( (texture, index) => {\n                                    return <div className = {`Texture ${ currentItem.selectedIndex === index ? 'active' : ''} ${current}`} \n                                        key = { index }  \n                                        style={{ \n                                            backgroundImage: `url(${texture})`,\n                                            backgroundColor: (current == 'bin' || current == 'lid') ? currentItem.color : items.aluminum.color\n                                        }} \n                                        onClick = {((e) => {\n                                            e.stopPropagation()\n                                            e.preventDefault()\n\n                                            if (currentItem.selectedIndex == index) {\n                                                currentItem.selectedIndex = null\n                                                currentItem.texture = loadTexture(null)\n                                            } else {\n                                                currentItem.selectedIndex = index\n                                                currentItem.texture = loadTexture(texture)\n                                            }\n                                            setItem(currentItem)\n                                        })}\n                                    />\n                                })}\n                                <div className='addWrap' onClick={()=>{imageInput.current.click()}}>\n                                    + Add\n                                </div>\n                            </div>\n                        }\n                        <FormGroup row className={'sliders'}>\n                            {Object.entries(currentItem).map(([key, value]) => {\n                                if (typeof value === 'number' && !key.includes('Index')) {\n                                    return <FormControlLabel key={key}\n                                        control={\n                                            <PrettoSlider\n                                                value={(key.includes('Angle') ? parseInt(Math.radToDeg(value)) : value)}\n                                                valueLabelDisplay='auto'\n                                                onChange={(e, val) => (currentItem[key] = (key.includes('Angle') ? Math.degToRad(val) : val), setItem(currentItem))}\n                                                step={0.01}\n                                                min={key.includes('Angle')\n                                                    ? key.includes('wheel')\n                                                        ? -30\n                                                        : 0\n                                                    : key.includes('Depth')\n                                                        ? -1\n                                                        : 0\n                                                }\n                                                max={key.includes('Angle')\n                                                    ? key.includes('wheel')\n                                                        ? 30\n                                                        : 360\n                                                    : key.includes('Depth')\n                                                        ? 1\n                                                        : 100\n                                                }\n                                                name={key}\n                                                color='primary'\n                                            />\n                                        }\n                                        label={key}\n                                    />\n                                }\n                            })}\n                        </FormGroup>\n                        <FormGroup row className={'switch'}>\n                            {Object.entries(currentItem).map(([key, value]) => {\n                                if (typeof value === 'boolean') {\n                                    return <FormControlLabel key={key}\n                                        control={\n                                            <PurpleSwitch\n                                                checked={value}\n                                                onChange={(e) => (currentItem[key] = e.target.checked, setItem(currentItem))}\n                                                name={key}\n                                                color='primary'\n                                            />\n                                        }\n                                        label={key}\n                                    />\n                                }\n                            })}\n                        </FormGroup>\n                    </div>\n                    <input id='myInput'\n                        type = 'file'\n                        accept = 'image/*'\n                        ref = {imageInput}\n                        style = {{display: 'none'}}\n                        onChange = { (e) => {\n                            e.stopPropagation()\n                            e.preventDefault()\n\n                            // Get the file and name\n                            const file = e.target.files[0]\n                            if (file) {\n                                const url = URL.createObjectURL(file)\n                                \n                                currentItem.textures.push(url)\n                                currentItem.selectedIndex = currentItem.textures.length - 1\n                                currentItem.texture = loadTexture(url)\n\n                                setItem(currentItem)\n                            }\n                        } }\n                    />\n                </div>\n            }\n            <div className={`GlobalActions ${background}`}>\n                <FormControlLabel\n                    control={\n                        <PurpleSwitch\n                            checked={background == 'black' ? true : false}\n                            onChange={(e) => (setBackground(background == 'black' ? 'white' : 'black'))}\n                            name={'darkMode'}\n                            color='primary'\n                        />\n                    }\n                    label={`Dark Mode`}\n                />\n                <div className={`Button`}\n                    onClick={(e)=>{\n                        e.stopPropagation()\n                        e.preventDefault()\n\n                        const canvas = document.getElementsByTagName('canvas')[0]\n\n                        if (canvas) {\n                            const url = canvas.toDataURL( 'image/png' )\n                            const link = document.createElement('a')\n\n                            link.setAttribute('href', url)\n                            link.setAttribute('target', '_blank')\n                            link.setAttribute('download', 'render')\n\n                            link.click()\n                        } else {\n                            console.warn('Could not find canvas to render from!')\n                        }\n                    }}>\n                    📷 Save PNG\n                </div>\n            </div>\n        </div>\n    )\n}\n","import React, { Suspense } from 'react'\nimport { Canvas } from '@react-three/fiber'\nimport { Environment, OrbitControls, Stats } from '@react-three/drei'\nimport useStore from './Store'\n\nimport Serve from './Serve'\nimport Customizer from './Customizer'\n\nexport default (props) => {\n    const [background] = useStore(state => [state.background])\n\n    return (\n        <>\n        <Canvas style={{background: background}} shadows concurrent gl={{ preserveDrawingBuffer: true }} frameloop dpr={[1, 2]} shadows camera={{ position: [1.5, 1, 1.7], fov: 45, near: 0.25, far: 20 }} >\n            <Suspense fallback={null}>\n                <Serve />\n                <Environment preset='sunset' /> \n            </Suspense>\n            <OrbitControls target={[0, 0.5, 0]} minDistance={1} maxDistance={5} enableDamping={true} dampingFactor={0.3} minPolarAngle={0.3} maxPolarAngle={1.7} />\n            <hemisphereLight skyColor={\"blue\"} groundColor={0xffffff} intensity={0.2} position={[0, 50, 0]} />\n            <directionalLight position={[8, 20, 8]} shadow-camera-left={-4} shadow-camera-bottom={-4} shadow-camera-right={16} shadow-camera-top={16} shadow-mapSize-height={1024} shadow-mapSize-width={1024} castShadow />\n            {/* <Stats /> */}\n        </Canvas>\n        <Customizer />\n        </>\n    )\n}","import Scene from './components/Scene';\n\nexport default () => {\n  return (\n    <Scene />\n  )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.scss';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}